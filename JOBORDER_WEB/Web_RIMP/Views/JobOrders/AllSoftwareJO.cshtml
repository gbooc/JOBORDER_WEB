@using PagedList.Mvc;
@using PagedList;
@model PagedList.IPagedList<Web_RIMP.Models.AllSoftwareJOModel>

@{
    var progress = 0;
}


<div class="row">
    <div class="col-12" id="dvBody">
        <div id="divHeader" class="custom-table">
            <p id="tblLabel">On Going Development</p>
        </div>
        <div id="searchDiv">
            <div class="input-group" id="txtSearch">
                <input type="text" class="form-control" placeholder="Search applications/Programmer" id="txt-sw-search">
                <div class="input-group-append">
                    <button class="btn btn-dark" type="button" onclick="joSearch('sw')">
                        <i class="fa fa-search"></i>
                    </button>
                    <button class="btn btn-info" type="button" onclick="reloadPage()">
                        <i class="fa fa-refresh"></i>
                    </button>
                </div>
            </div>
        </div>
        <div id="searchTbl">

        </div>
        <div class="table-responsive">
            <table class="table table-striped table-dark table-hover table-responsive-lg table-bordered" id="tbl-sw" style="text-align:center;">
                <thead class="thead-dark">
                    <tr id="tblTr">

                        <th style="width:10%;">Code Number</th>
                        <th>Application</th>
                        <th>Status</th>
                        <th>Progress</th>
                        <th>Assignee</th>
                        <th style="width:10%;"></th>
                    </tr>
                </thead>
                <tbody id="tb-sw">
                    @foreach (var model in Model)
                    {
                        var jo = model.JoNumber;
                        var width = "";
                        var progressColor = "";
                        var status = model.Status;
                        <tr>
                            <td style="width:10%;">@Html.DisplayFor(modelItem => model.CodeNumber)</td>
                            <td>@Html.DisplayFor(modelItem => model.AppName)</td>
                            <td>@Html.DisplayFor(modelItem => model.Status)</td>
                            <td>
                                @switch (status)
                                {

                                    case "For Approval":
                                        progress = 5;
                                        width = progress + "%";
                                        progressColor = "progress-bar progress-bar-striped";
                                        break;
                                    case "Requirements":
                                        progress = 20;
                                        width = progress + "%";
                                        progressColor = "progress-bar progress-bar-striped bg-success";
                                        break;
                                    case "Development":
                                        progress = 40;
                                        width = progress + "%";
                                        progressColor = "progress-bar progress-bar-striped bg-info";
                                        break;
                                    case "Testing":
                                        progress = 60;
                                        width = progress + "%";
                                        progressColor = "progress-bar progress-bar-striped bg-warning";
                                        break;
                                    case "Debugging":
                                        progress = 80;
                                        width = progress + "%";
                                        progressColor = "progress-bar progress-bar-striped bg-danger";
                                        break;
                                    case "Orientation":
                                        progress = 100;
                                        width = progress + "%";
                                        progressColor = "progress-bar bg-success";
                                        break;
                                }
                                <div class="progress">

                                    <div class="@progressColor" role="progressbar" style="width: @width" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100">
                                        @progress%
                                    </div>
                                </div>
                            </td>
                            <td>@Html.DisplayFor(modelItem => model.Assignee)</td>
                            <td style="width:10%;">
                                <a href="@Url.Action("JobOrderDetails","JobOrders",new { JoNumber = jo})#AllJo" class="btn btn-outline-warning" id="createBtn" style="float:left;">
                                    <i class="fa fa-pencil-square" style="font-size:18px;"></i>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="row">
            <div class="col-2" id="swPagerID" style="color:white;">
                Showing @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
                out of @Model.PageCount pages
            </div>
            <div id="swID" class="col-10" style="margin-top:-25px;">

                @Html.PagedListPager((IPagedList)Model, page => Url.Action("AllSoftwareJO", new { page }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
                 new AjaxOptions()
                 {
                     HttpMethod = "GET",
                     UpdateTargetId = "swID",
                     OnBegin = "displayLoader",
                 }))
            </div>
        </div>
    </div>
</div>
